{"ast":null,"code":"var _jsxFileName = \"/Users/rafnaali/Desktop/Todo-list/BlueSky-project/src/context.js\",\n    _s = $RefreshSig$();\n\nimport { useMemo, useReducer, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoContext = /*#__PURE__*/createContext();\nconst todoContext = useMemo(() => ({\n  addTodo: async data => {\n    await fetch(\"api/todo/create\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        \"name\": \"Something to do\",\n        \"isComplete\": false\n      })\n    });\n    dispatch({\n      type: \"ADD\"\n    });\n  }\n}), []);\n\nfunction ToDoProvider({\n  children\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer((prevState, action) => {\n    switch (action.type) {\n      case \"ADD\":\n        return { ...prevState,\n          isLoading: true\n        };\n    }\n  }, {\n    isLoading: true,\n    todos: []\n  });\n  const value = {\n    state,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(ToDoContext.Provider, {\n    value: todoContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ToDoProvider, \"px49VkWhZ1iLBINT/ckuFN2ShhI=\");\n\n_c = ToDoProvider;\nexport { ToDoProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoProvider\");","map":{"version":3,"sources":["/Users/rafnaali/Desktop/Todo-list/BlueSky-project/src/context.js"],"names":["useMemo","useReducer","createContext","ToDoContext","todoContext","addTodo","data","fetch","method","body","JSON","stringify","dispatch","type","ToDoProvider","children","state","prevState","action","isLoading","todos","value"],"mappings":";;;AAAA,SAASA,OAAT,EAAkBC,UAAlB,EAA8BC,aAA9B,QAAkD,OAAlD;;AAEA,MAAMC,WAAW,gBAAGD,aAAa,EAAjC;AAEA,MAAME,WAAW,GAAGJ,OAAO,CACvB,OAAO;AACLK,EAAAA,OAAO,EAAE,MAAOC,IAAP,IAAgB;AACvB,UAAMC,KAAK,CACP,iBADO,EAEP;AACEC,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACF;AAAC,gBAAO,iBAAR;AAA0B,sBAAa;AAAvC,OADE;AAFR,KAFO,CAAX;AAQEC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH;AAXI,CAAP,CADuB,EAcvB,EAduB,CAA3B;;AAiBE,SAASC,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAkC;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQJ,QAAR,IAAoBX,UAAU,CAChC,CAACgB,SAAD,EAAYC,MAAZ,KAAuB;AACrB,YAAQA,MAAM,CAACL,IAAf;AACE,WAAK,KAAL;AACE,eAAO,EACL,GAAGI,SADE;AAELE,UAAAA,SAAS,EAAE;AAFN,SAAP;AAFJ;AAOD,GAT+B,EAUhC;AACEA,IAAAA,SAAS,EAAE,IADb;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAVgC,CAApC;AAeA,QAAMC,KAAK,GAAG;AAACL,IAAAA,KAAD;AAAQJ,IAAAA;AAAR,GAAd;AACA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAER,WAA7B;AAAA,cAA2CW;AAA3C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAlBQD,Y;;KAAAA,Y;AAmBT,SAAQA,YAAR","sourcesContent":["import { useMemo, useReducer, createContext} from 'react'\n\nconst ToDoContext = createContext()\n\nconst todoContext = useMemo(\n    () => ({\n      addTodo: async (data) => {\n        await fetch(\n            \"api/todo/create\",\n            {\n              method: \"POST\",\n              body: JSON.stringify(\n                  {\"name\":\"Something to do\",\"isComplete\":false}),\n            }\n          )\n          dispatch({ type: \"ADD\" });\n      },\n    }),\n    []\n  );\n\n  function ToDoProvider({children}) {\n    const [state, dispatch] = useReducer(\n        (prevState, action) => {\n          switch (action.type) {\n            case \"ADD\":\n              return {\n                ...prevState,\n                isLoading: true,\n              };\n          }\n        },\n        {\n          isLoading: true,\n          todos: [],\n        }\n      );\n    const value = {state, dispatch}\n    return <ToDoContext.Provider value={todoContext}>{children}</ToDoContext.Provider>\n  }\n  export {ToDoProvider}\n  "]},"metadata":{},"sourceType":"module"}