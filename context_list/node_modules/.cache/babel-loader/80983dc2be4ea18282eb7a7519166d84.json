{"ast":null,"code":"var _jsxFileName = \"/Users/rafnaali/Desktop/Todo-list/BlueSky-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useReducer } from 'react';\nimport './App.css';\nimport Content from \"./Content\";\nimport { makeServer } from \"./server.js\";\nimport ToDoContext from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  makeServer();\n  const todoContext = useMemo(() => ({\n    addTodo: async data => {\n      await fetch(\"api/todo/create\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: data.name,\n          isComplete: data.isComplete\n        })\n      }); // dispatch({type: \"LOADING\"});\n    },\n    listTodo: async data => {\n      dispatch({\n        type: \"LIST\",\n        value: data\n      });\n      console.log(state.todosFcontext);\n    },\n    listUser: async data => {\n      dispatch({\n        type: \"USER\",\n        value: data\n      });\n      console.log(state.userFcontext);\n    },\n    setIsLoading: async data => {\n      dispatch({\n        type: \"LOADING\",\n        value: data\n      });\n    },\n    editTodo: async id => {\n      await fetch(\"api/todo/\" + id, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(response => response.json()).then(json => dispatch({\n        type: \"EDIT\",\n        value: json.todo\n      }, dispatch({\n        type: \"SELECT USER\",\n        value: json.todo.userId\n      }, dispatch({\n        type: \"STATUS\",\n        value: true\n      }))));\n    },\n    setSelectedUser: async data => {\n      dispatch({\n        type: \"SELECT USER\",\n        value: data\n      });\n    },\n    statusTodo: async data => {\n      dispatch({\n        type: \"STATUS\",\n        value: data\n      });\n    },\n    deleteTodo: async id => {\n      await fetch(\"api/todo/\" + id + \"/delete\", {\n        method: \"DELETE\"\n      }).then(response => response.json()).then(json => dispatch({\n        type: \"DELETE\",\n        value: true\n      }));\n    },\n    closeDeleteSnackbar: async () => {\n      dispatch({\n        type: \"DELETE\",\n        value: false\n      });\n    }\n  }), []);\n  const [state, dispatch] = useReducer((prevState, action) => {\n    switch (action.type) {\n      case \"LIST\":\n        return { ...prevState,\n          todosFcontext: action.value\n        };\n\n      case \"USER\":\n        return { ...prevState,\n          userFcontext: action.value\n        };\n\n      case \"STATUS\":\n        return { ...prevState,\n          statusFcontext: action.value\n        };\n\n      case \"LOADING\":\n        return { ...prevState,\n          isLoading: action.value\n        };\n\n      case \"EDIT\":\n        return { ...prevState,\n          editFcontext: action.value\n        };\n\n      case \"SELECT USER\":\n        return { ...prevState,\n          selectedUser: action.value\n        };\n\n      case \"DELETE\":\n        return { ...prevState,\n          deleteFcontext: action.value\n        };\n    }\n  }, {\n    isLoading: 0,\n    todosFcontext: {},\n    userFcontext: [],\n    editFcontext: {},\n    selectedUser: \" \",\n    deleteFcontext: false,\n    statusFcontext: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(ToDoContext.Provider, {\n        value: {\n          todoContext,\n          state,\n          dispatch\n        },\n        children: /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dQJVoHHYYFI23Z+ryZXCPs4103o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rafnaali/Desktop/Todo-list/BlueSky-project/src/App.js"],"names":["React","useMemo","useReducer","Content","makeServer","ToDoContext","App","todoContext","addTodo","data","fetch","method","body","JSON","stringify","name","isComplete","listTodo","dispatch","type","value","console","log","state","todosFcontext","listUser","userFcontext","setIsLoading","editTodo","id","headers","then","response","json","todo","userId","setSelectedUser","statusTodo","deleteTodo","closeDeleteSnackbar","prevState","action","statusFcontext","isLoading","editFcontext","selectedUser","deleteFcontext"],"mappings":"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","sourcesContent":["import React, {useMemo,useReducer } from 'react';\nimport './App.css'\nimport Content from \"./Content\";\n import {makeServer} from \"./server.js\";\nimport ToDoContext from './context'\n\nfunction App() {\n  makeServer();\n  \n  const todoContext = useMemo(\n    () => ({\n      addTodo: async (data) => {\n        await fetch(\n            \"api/todo/create\",\n            {\n              method: \"POST\",\n              body: JSON.stringify(\n                {name:data.name, isComplete:data.isComplete}),\n            }\n          )\n          // dispatch({type: \"LOADING\"});\n      },\n\n      listTodo: async (data) => {\n      \n          dispatch({ type: \"LIST\", value:data });\n          console.log(state.todosFcontext)\n      },\n\n      listUser: async (data) => {\n      \n        dispatch({ type: \"USER\", value:data });\n        console.log(state.userFcontext)\n      },\n\n      setIsLoading: async (data) => {\n\n       dispatch({type: \"LOADING\", value:data});\n      },\n      editTodo: async (id) => {\n        await fetch(\"api/todo/\"+id, {\n            headers : { \n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }})\n            .then((response) => response.json())\n            .then((json) => dispatch({type: \"EDIT\", value:json.todo}, dispatch({type: \"SELECT USER\", value:json.todo.userId}, dispatch({type: \"STATUS\", value:true}))))\n      },\n\n      setSelectedUser: async (data) => {\n\n        dispatch({type: \"SELECT USER\", value:data});\n       },\n\n      statusTodo: async (data) => {\n        dispatch({type: \"STATUS\", value:data});\n      } ,\n\n      deleteTodo: async (id) => {\n        await fetch(\"api/todo/\"+id+\"/delete\", {\n          method: \"DELETE\"\n        }\n        )\n            .then((response) => response.json())\n            .then((json) => dispatch({type: \"DELETE\", value:true}))\n      },\n\n      closeDeleteSnackbar: async () => {\n        dispatch({type: \"DELETE\", value:false});\n      }\n    }),\n    []\n  );\n  const [state, dispatch] = useReducer(\n    (prevState, action) => {\n      switch (action.type) {\n        case \"LIST\":\n          return {\n            ...prevState,\n            todosFcontext: action.value,\n          };\n        case \"USER\":\n        return {\n          ...prevState,\n          userFcontext: action.value,\n        };\n        case \"STATUS\":\n          return{\n            ...prevState,\n            statusFcontext: action.value,\n        };\n        case \"LOADING\":\n        return {\n          ...prevState,\n          isLoading: action.value,\n        };\n        case \"EDIT\":\n        return {\n          ...prevState,\n          editFcontext: action.value,\n        };\n        case \"SELECT USER\":\n        return {\n          ...prevState,\n          selectedUser: action.value,\n        };\n        case \"DELETE\":\n        return {\n          ...prevState,\n          deleteFcontext: action.value,\n        };\n      \n      }\n    },\n    {\n      isLoading: 0,\n      todosFcontext: {},\n      userFcontext:[],\n      editFcontext:{},\n      selectedUser:\" \",\n      deleteFcontext:false,\n      statusFcontext:false,\n    }\n  );\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n  <ToDoContext.Provider value={{todoContext, state, dispatch}}><Content /></ToDoContext.Provider>  \n      \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}