{"ast":null,"code":"var _jsxFileName = \"/Users/rafnaali/Desktop/Todo-list/BlueSky-project/src/Content.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from 'react';\nimport ToDoContext from './context';\nimport { makeStyles } from '@material-ui/styles';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { Button, Grid, Table, TableBody, TableCell, TableRow, TableHead, Snackbar, FormControl, Paper, FormHelperText, Dialog, FormControlLabel, Switch, TextField, IconButton, Select, MenuItem } from '@material-ui/core';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddTask from \"../src/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    width: 1000,\n    textAlign: 'center',\n    borderRadius: '10pt 10pt 4pt 4pt'\n  },\n  header: {\n    backgroundColor: '#ffffff',\n    boxShadow: '0px 3px 6px #00000029',\n    padding: '20px 24px 15px',\n    fontWeight: '600',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: '10px 10px 0px 0px'\n  },\n  helperText: {\n    marginTop: \"-62px\"\n  },\n  font: {\n    fontWeight: '600'\n  },\n  button: {\n    minWidth: \"150px\",\n    fontWeight: 600,\n    border: 2,\n    boxShadow: '0px 3px 6px #00000029',\n    borderRadius: '6px',\n    margin: \"21px\"\n  }\n}));\n\nconst Content = () => {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const {\n    todoContext,\n    state\n  } = useContext(ToDoContext);\n  useEffect(() => {\n    fetch(\"api/todos\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => response.json()).then(json => todoContext.listTodo(json.todos));\n  }, [state.isLoading]);\n  useEffect(() => {\n    fetch(\"api/users\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => response.json()).then(json => todoContext.listUser(json.users));\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSelectUser = e => {\n    todoContext.setSelectedUser(e.target.value);\n  };\n\n  function Alert(props) {\n    return /*#__PURE__*/_jsxDEV(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n\n  const statusHandler = e => {\n    if (e.target.checked === true) {\n      todoContext.statusTodo(true);\n    } else {\n      todoContext.statusTodo(false);\n    } // todoContext.statusTodo(e.target.value)\n\n  };\n\n  const classes = useStyles();\n  const lsp = Object.values(state.todosFcontext);\n  console.log(\"list\", lsp);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.header,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          style: {\n            margin: \"25px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(TextField // label=\"Project Name\" \n              , {\n                variant: \"outlined\",\n                value: state.editFcontext.name,\n                fullWidth: true,\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                className: classes.helperText,\n                children: \"Project Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"user-field\",\n              id: \"demo-simple-select\",\n              value: state.selectedUser,\n              onChange: handleSelectUser,\n              variant: \"outlined\",\n              size: \"small\",\n              fullWidth: true,\n              style: {\n                height: 38\n              },\n              children: state.userFcontext.map((user, key) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                style: {\n                  width: \"none\"\n                },\n                value: user.id,\n                children: user.firstName + user.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 20\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: classes.helperText,\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"true\",\n              size: \"small\",\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                onChange: statusHandler,\n                checked: state.statusFcontext,\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: classes.helperText,\n              style: {\n                marginLeft: \"114px\"\n              },\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          style: {\n            margin: \"85px 25px 22px\",\n            border: \"1px solid black\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  className: classes.font,\n                  children: \"Name \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: classes.font,\n                  children: \"User\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: classes.font,\n                  children: \"completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: classes.font,\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: lsp.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [row.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [row.user, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.isComplete === true ? /*#__PURE__*/_jsxDEV(CheckCircleOutlineIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 80\n                  }, this) : /*#__PURE__*/_jsxDEV(HighlightOffIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 108\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => todoContext.deleteTodo(row.id),\n                    children: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 93\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 36\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => todoContext.editTodo(row.id),\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 175\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 119\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justify: \"flex-end\",\n          alignItems: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleClickOpen,\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: state.deleteFcontext,\n        autoHideDuration: 6000,\n        onClose: todoContext.closeDeleteSnackbar,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: todoContext.closeDeleteSnackbar,\n          severity: \"success\",\n          children: \"This list has been deleted !!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        \"aria-labelledby\": \"max-width-dialog-title\",\n        open: open,\n        style: {\n          backgroundColor: '#aef1eb54'\n        },\n        PaperProps: {\n          classes: {\n            root: classes.dialog\n          }\n        } // onClose={handleClose}\n        ,\n        children: /*#__PURE__*/_jsxDEV(AddTask, {\n          handleClose: handleClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Content, \"I2hnTaI2rtlphrUZj6E54pvGQgk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/rafnaali/Desktop/Todo-list/BlueSky-project/src/Content.js"],"names":["React","useEffect","useContext","ToDoContext","makeStyles","MuiAlert","Button","Grid","Table","TableBody","TableCell","TableRow","TableHead","Snackbar","FormControl","Paper","FormHelperText","Dialog","FormControlLabel","Switch","TextField","IconButton","Select","MenuItem","CheckCircleOutlineIcon","HighlightOffIcon","CancelIcon","EditIcon","AddTask","useStyles","theme","paper","width","textAlign","borderRadius","header","backgroundColor","boxShadow","padding","fontWeight","display","justifyContent","alignItems","helperText","marginTop","font","button","minWidth","border","margin","Content","open","setOpen","useState","todoContext","state","fetch","headers","then","response","json","listTodo","todos","isLoading","listUser","users","handleClickOpen","handleClose","handleSelectUser","e","setSelectedUser","target","value","Alert","props","statusHandler","checked","statusTodo","classes","lsp","Object","values","todosFcontext","console","log","editFcontext","name","selectedUser","height","userFcontext","map","user","key","id","firstName","lastName","statusFcontext","marginLeft","row","isComplete","deleteTodo","editTodo","deleteFcontext","closeDeleteSnackbar","root","dialog"],"mappings":"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","sourcesContent":["import React, {useEffect, useContext} from 'react';\nimport ToDoContext from './context';\nimport { makeStyles } from '@material-ui/styles';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {Button, Grid, Table, TableBody, TableCell, TableRow,TableHead,Snackbar\n  ,FormControl, Paper,FormHelperText, Dialog,FormControlLabel, Switch,TextField,IconButton,Select,MenuItem } from '@material-ui/core';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddTask from \"../src/AddTask\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    width: 1000,\n    textAlign: 'center',\n    borderRadius: '10pt 10pt 4pt 4pt' \n },\n  header:{\n    backgroundColor: '#ffffff',\n    boxShadow: '0px 3px 6px #00000029',\n    padding: '20px 24px 15px',\n    fontWeight: '600', \n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: '10px 10px 0px 0px'\n  },\n  helperText:{\n    marginTop:\"-62px\"\n  },\n  font:{\n    fontWeight:'600'\n  },\n  button: {\n    minWidth: \"150px\",\n    fontWeight: 600,\n    border: 2,\n    boxShadow: '0px 3px 6px #00000029',\n    borderRadius: '6px',\n    margin: \"21px\"\n  },\n}));\n\nconst Content =  () => {\n  const [open, setOpen] = React.useState(false);\n  const {todoContext, state} = useContext(ToDoContext)\n  useEffect( () => {\n    \n      fetch(\"api/todos\", {\n        headers : { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n         }})\n        .then((response) => response.json())\n        .then((json) => todoContext.listTodo(json.todos)) \n  }, [state.isLoading])\n\n  useEffect( () => {\n    fetch(\"api/users\", {\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }})\n      .then((response) => response.json())\n      .then((json) => todoContext.listUser(json.users))\n  },[] )\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSelectUser = (e) => {\n    todoContext.setSelectedUser(e.target.value)\n  }\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  const statusHandler = (e) => {\n    if (e.target.checked === true){\n      todoContext.statusTodo(true)\n    }\n    else {\n      todoContext.statusTodo(false)\n    } \n    // todoContext.statusTodo(e.target.value)\n  }\n\n  const classes = useStyles();   \n  \n\n\n  const lsp = Object.values(state.todosFcontext);\n  console.log(\"list\",lsp)\nreturn (\n<div>\n<Grid>\n  <Paper className={classes.paper}> \n    <div className={classes.header}>\n          <span>List</span>\n    </div>\n    <Grid container spacing={2} style={{ margin: \"25px\"}}>\n       <Grid item xs={4}>\n        <FormControl>\n                  <TextField\n                      // label=\"Project Name\" \n                      variant=\"outlined\"\n                      value={state.editFcontext.name}\n                      fullWidth\n                      size= \"small\" /> \n                      <FormHelperText className={classes.helperText}>Project Name</FormHelperText>    \n        </FormControl>\n        </Grid>\n        <Grid item xs={4}>\n            {/* <Autocomplete\n                    id=\"user-field\"\n                    value={state.editFcontext.userId}\n                    // freeSolo\n                    // options={state.userFcontext.map((user,key) => user.firstName + user.lastName ) }\n                    options={state.userFcontext}\n                     getOptionLabel={(option) => option.firstName + option.lastName}\n                    renderInput={(params) => (\n                      <TextField {...params} \n                          label=\"User\" \n                          variant=\"outlined\"\n                          \n                          fullWidth\n                          size= \"small\" />\n                    )}\n                  /> */}\n                          \n\n                  <Select\n                    labelId=\"user-field\"\n                    id=\"demo-simple-select\"\n                    value={state.selectedUser}\n                    onChange={handleSelectUser}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    fullWidth\n                    style={{ height: 38}}\n                  >\n                    \n                   {state.userFcontext.map((user,key) => \n                   <MenuItem style={{width:\"none\"}} value={user.id}>{user.firstName + user.lastName}</MenuItem> ) }\n                  </Select>\n                  <FormHelperText className={classes.helperText}>User</FormHelperText>\n                  </Grid>\n                  <Grid item xs={4}>\n                              <FormControlLabel\n                                          value=\"true\"\n                                          size= \"small\" \n                                          control={<Switch \n                                          onChange={statusHandler}\n                                          checked={state.statusFcontext}\n                                          color=\"primary\" />}\n                                />\n                              <FormHelperText className={classes.helperText} style={{marginLeft: \"114px\"}}>Completed</FormHelperText>      \n                              </Grid>\n                              {/* <p>{state.statusFcontext ? \"true\" : \"false\"}</p> */}\n    </Grid>\n    <Paper style={{margin:\"85px 25px 22px\", border: \"1px solid black\"}}>\n        <Table>\n            <TableHead>\n              <TableRow >\n                <TableCell className={classes.font}>Name </TableCell>\n                <TableCell className={classes.font}>User</TableCell>\n                <TableCell className={classes.font}>completed</TableCell>\n                <TableCell className={classes.font}>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {lsp.map(row =>\n                      <TableRow >\n                        <TableCell>{row.name} </TableCell>\n                        <TableCell>{row.user} </TableCell>\n                        <TableCell align='center'>{(row.isComplete === true) ? <CheckCircleOutlineIcon/> : <HighlightOffIcon/> }</TableCell>\n                        <TableCell><IconButton onClick={()=>todoContext.deleteTodo(row.id)}><CancelIcon/></IconButton><IconButton  onClick={()=>todoContext.editTodo(row.id)}><EditIcon/></IconButton></TableCell> \n                      </TableRow>\n              )}  \n            </TableBody>\n          </Table>\n  \n    </Paper>\n    <Grid container\n          direction=\"row\"\n          justify=\"flex-end\"\n          alignItems=\"flex-end\">\n      <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleClickOpen}\n      >\n          Add Task\n      </Button>\n      </Grid>\n          \n  </Paper> \n  <Snackbar open={state.deleteFcontext} autoHideDuration={6000} onClose={todoContext.closeDeleteSnackbar}>\n        <Alert onClose={todoContext.closeDeleteSnackbar} severity=\"success\">\n          This list has been deleted !!\n        </Alert>\n      </Snackbar>\n  <Dialog aria-labelledby=\"max-width-dialog-title\" open={open}\n              style={{ backgroundColor: '#aef1eb54' }}\n              PaperProps={{ classes: { root: classes.dialog } }}\n              // onClose={handleClose}\n        >\n          <AddTask handleClose={handleClose}/>\n      </Dialog>  \n  </Grid>\n</div>\n);\n}\nexport default Content;"]},"metadata":{},"sourceType":"module"}