{"ast":null,"code":"var _jsxFileName = \"/Users/rafnaali/Desktop/Todo-list/BlueSky-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useReducer } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Header from \"./Header\";\nimport Content from \"./Content\";\nimport { makeServer } from \"./server.js\";\nimport ToDoContext from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  makeServer();\n  const [todos, setTodos] = useState([]);\n  const [user, setUser] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n  const todoContext = useMemo(() => ({\n    addTodo: async data => {\n      await fetch(\"api/todo/create\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          \"name\": \"Something to do\",\n          \"isComplete\": false\n        })\n      });\n      dispatch({\n        type: \"ADD\"\n      });\n    },\n    listTodo: async data => {\n      dispatch({\n        type: \"LIST\",\n        value: data\n      });\n      console.log(state.todosFcontext);\n    },\n    listUser: async data => {\n      dispatch({\n        type: \"USER\",\n        value: data\n      });\n      console.log(\"user\", state.userFcontext);\n    }\n  }), []);\n  const [state, dispatch] = useReducer((prevState, action) => {\n    switch (action.type) {\n      case \"ADD\":\n        return { ...prevState,\n          isLoading: true\n        };\n\n      case \"LIST\":\n        return { ...prevState,\n          todosFcontext: action.value\n        };\n\n      case \"USER\":\n        return { ...prevState,\n          userFcontext: action.value\n        };\n    }\n  }, {\n    isLoading: true,\n    todosFcontext: {},\n    userFcontext: []\n  }); // useEffect(() => {\n  //   fetch(\"api/users\" , {\n  //     headers : { \n  //       'Content-Type': 'application/json',\n  //       'Accept': 'application/json'\n  //      }\n  //   })\n  //     .then((result) => result.json())\n  //     .then((resp) => {\n  //       // console.warn(resp)\n  //       setTodo(resp)\n  //     })\n  //   }\n  // )\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(ToDoContext.Provider, {\n        value: {\n          todoContext,\n          state,\n          dispatch\n        },\n        children: /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"poZuq3bCrAZ94vnoOfjeCxMjwGA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rafnaali/Desktop/Todo-list/BlueSky-project/src/App.js"],"names":["React","useState","useMemo","useReducer","Header","Content","makeServer","ToDoContext","App","todos","setTodos","user","setUser","todo","setTodo","todoContext","addTodo","data","fetch","method","body","JSON","stringify","dispatch","type","listTodo","value","console","log","state","todosFcontext","listUser","userFcontext","prevState","action","isLoading"],"mappings":"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","sourcesContent":["import React, { useState, useMemo,useReducer } from 'react';\nimport logo from './logo.svg';\nimport './App.css'\nimport Header from \"./Header\";\nimport Content from \"./Content\";\nimport {makeServer} from \"./server.js\";\nimport ToDoContext from './context'\n\nfunction App() {\n  makeServer();\n  \n \n  const [todos,setTodos] = useState([])\n  const [user,setUser]= useState([])\n  const [todo,setTodo] = useState(\"\")\n  \n  const todoContext = useMemo(\n    () => ({\n      addTodo: async (data) => {\n        await fetch(\n            \"api/todo/create\",\n            {\n              method: \"POST\",\n              body: JSON.stringify(\n                  {\"name\":\"Something to do\",\"isComplete\":false}),\n            }\n          )\n          dispatch({ type: \"ADD\" });\n      },\n\n      listTodo: async (data) => {\n      \n          dispatch({ type: \"LIST\", value:data });\n          console.log(state.todosFcontext)\n      },\n\n      listUser: async (data) => {\n      \n        dispatch({ type: \"USER\", value:data });\n        console.log(\"user\", state.userFcontext)\n    },\n\n    }),\n    []\n  );\n  const [state, dispatch] = useReducer(\n    (prevState, action) => {\n      switch (action.type) {\n        case \"ADD\":\n          return {\n            ...prevState,\n            isLoading: true,\n          };\n        case \"LIST\":\n          return {\n            ...prevState,\n            todosFcontext: action.value,\n          };\n        case \"USER\":\n        return {\n          ...prevState,\n          userFcontext: action.value,\n        }\n\n      }\n    },\n    {\n      isLoading: true,\n      todosFcontext: {},\n      userFcontext:[],\n    }\n  );\n\n\n \n\n  // useEffect(() => {\n  //   fetch(\"api/users\" , {\n  //     headers : { \n  //       'Content-Type': 'application/json',\n  //       'Accept': 'application/json'\n  //      }\n  //   })\n  //     .then((result) => result.json())\n  //     .then((resp) => {\n  //       // console.warn(resp)\n  //       setTodo(resp)\n  //     })\n  //   }\n  // )\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n  <ToDoContext.Provider value={{todoContext, state, dispatch}}><Content /></ToDoContext.Provider>  \n      \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}