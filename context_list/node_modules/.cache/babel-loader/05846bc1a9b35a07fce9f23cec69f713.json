{"ast":null,"code":"var _jsxFileName = \"/Users/rafnaali/Desktop/Todo-list/BlueSky-project/src/Content.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport ToDoContext from './context';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Grid, Typography, InputLabel, Select, List, ListItem, FormControl, Paper, FormHelperText, Dialog, FormControlLabel, Switch, TextField, IconButton } from '@material-ui/core';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    width: 1000,\n    textAlign: 'center',\n    borderRadius: '10pt 10pt 4pt 4pt'\n  },\n  header: {\n    backgroundColor: '#ffffff',\n    boxShadow: '0px 3px 6px #00000029',\n    padding: '20px 24px 15px',\n    fontWeight: '600',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: '10px 10px 0px 0px'\n  },\n  // grids:{\n  //   lineHeight: 2\n  // },\n  helperText: {\n    marginTop: \"-62px\"\n  },\n  button: {\n    minWidth: \"150px\",\n    fontWeight: 600,\n    border: 2,\n    boxShadow: '0px 3px 6px #00000029',\n    borderRadius: '6px',\n    margin: \"21px\"\n  }\n}));\n\nconst Content = () => {\n  _s();\n\n  const {\n    todoContext,\n    state\n  } = useContext(ToDoContext);\n  useEffect(() => {\n    fetch(\"api/todos\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => response.json()).then(json => todoContext.listTodo(json.todos));\n  }, []);\n  const classes = useStyles();\n  const [list, setList] = React.useState('');\n\n  const handleChange = event => {\n    setList(event.target.value);\n  };\n\n  const lsp = Object.values(state.todosFcontext);\n  console.log(\"first\", lsp);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-simple-select-label\",\n        children: \"Age\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-simple-select-label\",\n        id: \"demo-simple-select\",\n        value: lsp,\n        onChange: handleChange,\n        children: lsp.map((todo, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n          value: todo.name\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-select-currency-native\",\n        select: true,\n        fullWidth: true,\n        size: \"small\",\n        labelPlacement: \"top\",\n        variant: \"outlined\",\n        SelectProps: {\n          native: true\n        },\n        options: lsp.map((todo, key) => todo.name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"user-field\",\n          value: lsp,\n          freeSolo: true,\n          options: lsp.map((todo, key) => todo.name),\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"User\",\n            variant: \"outlined\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Content, \"hsEa6GCloRS20654sEI51FSZukI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/rafnaali/Desktop/Todo-list/BlueSky-project/src/Content.js"],"names":["React","useState","useEffect","useContext","ToDoContext","makeStyles","Button","Grid","Typography","InputLabel","Select","List","ListItem","FormControl","Paper","FormHelperText","Dialog","FormControlLabel","Switch","TextField","IconButton","CheckCircleOutlineIcon","CancelIcon","EditIcon","Autocomplete","useStyles","theme","paper","width","textAlign","borderRadius","header","backgroundColor","boxShadow","padding","fontWeight","display","justifyContent","alignItems","helperText","marginTop","button","minWidth","border","margin","Content","todoContext","state","fetch","headers","then","response","json","listTodo","todos","classes","list","setList","handleChange","event","target","value","lsp","Object","values","todosFcontext","console","log","formControl","map","todo","key","name","native","params"],"mappings":"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","sourcesContent":["import React, { useState , useEffect, useContext} from 'react';\nimport ToDoContext from './context';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button, Grid, Typography,InputLabel,Select, List, ListItem,FormControl, Paper,FormHelperText, Dialog,FormControlLabel, Switch,TextField,IconButton } from '@material-ui/core';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    width: 1000,\n    textAlign: 'center',\n    borderRadius: '10pt 10pt 4pt 4pt' \n },\n  header:{\n    backgroundColor: '#ffffff',\n    boxShadow: '0px 3px 6px #00000029',\n    padding: '20px 24px 15px',\n    fontWeight: '600', \n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: '10px 10px 0px 0px'\n  },\n  // grids:{\n  //   lineHeight: 2\n  // },\n  helperText:{\n    marginTop:\"-62px\"\n  },\n  button: {\n    minWidth: \"150px\",\n    fontWeight: 600,\n    border: 2,\n    boxShadow: '0px 3px 6px #00000029',\n    borderRadius: '6px',\n    margin: \"21px\"\n  },\n}));\n\nconst Content =  () => {\n  const {todoContext, state} = useContext(ToDoContext)\n  useEffect( () => {\n    fetch(\"api/todos\", {\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }})\n      .then((response) => response.json())\n      .then((json) => todoContext.listTodo(json.todos))\n  }, [])\n\n  const classes = useStyles();   \n  const [list, setList] = React.useState('');\n\n  const handleChange = (event) => {\n    setList(event.target.value);\n  };\n\n  const lsp = Object.values(state.todosFcontext);\n  console.log(\"first\",lsp)\nreturn (\n<div>\n<FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={lsp}\n          onChange={handleChange}\n        >\n          {lsp.map((todo,key) => (\n                    <div key={key} value={todo.name}>\n                    </div>\n                ))} \n        </Select>\n      </FormControl>\n\n<Grid item xs={6}>\n    <TextField\n                id=\"standard-select-currency-native\"\n                select\n                fullWidth\n                size= \"small\"\n                labelPlacement=\"top\"\n                variant=\"outlined\"\n                SelectProps={{\n                    native: true,\n                }}\n                options={lsp.map((todo,key) => todo.name)}\n                />\n                {/* {lsp.map((todo,key) => (\n                    <div key={key} value={todo.name}>\n                    </div>\n                ))} */}\n            {/* </TextField> */}\n            <FormHelperText >User</FormHelperText>\n\n<FormControl>\n                  <Autocomplete\n                      id=\"user-field\"\n                      value={lsp}\n                      freeSolo\n                      options={lsp.map((todo,key) => todo.name)}\n                      renderInput={(params) => (\n                        <TextField {...params} \n                            label=\"User\" \n                            variant=\"outlined\"\n                            size=\"small\" />\n                      )}\n                    />\n        </FormControl>\n    </Grid> \n</div>\n);\n}\nexport default Content;"]},"metadata":{},"sourceType":"module"}