{"ast":null,"code":"var _jsxFileName = \"/Users/rafnaali/Desktop/Todo-list/BlueSky-project/src/AddTask.js\",\n    _s = $RefreshSig$();\n\n// import React from 'react';\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { TextField, FormControl, FormHelperText, Grid, List, ListItem, Paper, Button, Switch } from '@material-ui/core';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport ToDoContext from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    width: '500px',\n    textAlign: 'center',\n    borderRadius: '10pt 10pt 4pt 4pt'\n  },\n  header: {\n    backgroundColor: '#ffffff',\n    boxShadow: '0px 3px 6px #00000029',\n    padding: '20px 24px 15px',\n    // border: '1px solid #eeeeee',\n    fontWeight: '600',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: '10px 10px 0px 0px'\n  },\n  grids: {\n    padding: '0px 7px 0px 0',\n    lineHeight: 2\n  },\n  button: {\n    minWidth: \"150px\",\n    fontWeight: 600,\n    border: 2,\n    boxShadow: '0px 3px 6px #00000029',\n    borderRadius: '6px',\n    margin: \"33px\"\n  },\n  helperText: {\n    marginTop: \"-65px\"\n  },\n  selectForm: {\n    width: '100%'\n  },\n  gridField: {\n    margin: '15px'\n  }\n}));\n\nconst AddTask = ({\n  todos,\n  setTodos,\n  handleClose\n}) => {\n  _s();\n\n  const {\n    todoContext,\n    state\n  } = useContext(ToDoContext);\n  const [inputText, setInputText] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const [todoStatus, setTodoStatus] = useState(false);\n  const classes = useStyles();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    todoContext.addTodo({\n      name: inputText,\n      isComplete: todoStatus,\n      user: user\n    });\n    todoContext.setIsLoading(state.isLoading + 1);\n    setInputText(\" \");\n    handleClose();\n  };\n\n  const inputTextHandler = e => {\n    console.log(e.target.value);\n    setInputText(e.target.value);\n  };\n\n  const inputUserHandler = e => {\n    console.log(e.target.value);\n    setUser(e.target.value);\n  };\n\n  const statusHandler = e => {\n    if (todoStatus) {\n      setTodoStatus(false);\n    } else {\n      setTodoStatus(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.header,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              className: classes.gridField,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                className: classes.selectForm,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"outlined-basic\",\n                  size: \"small\",\n                  value: inputText,\n                  onChange: inputTextHandler,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                className: classes.helperText,\n                children: \"Project Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              className: classes.gridField,\n              style: {\n                marginTop: \"77px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                className: classes.selectForm,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  id: \"user-field\",\n                  freeSolo: true,\n                  value: user,\n                  options: state.userFcontext.map((user, key) => user.firstName + user.lastName),\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"User\",\n                    onChange: inputUserHandler,\n                    variant: \"outlined\",\n                    fullWidth: true,\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                className: classes.helperText,\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              style: {\n                marginTop: \"90px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"completed\",\n                size: \"small\",\n                onChange: statusHandler,\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                className: classes.helperText,\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddTask, \"C7MZEc5O8wASJrzqKGNm1Z1+rEA=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddTask;\nexport default AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["/Users/rafnaali/Desktop/Todo-list/BlueSky-project/src/AddTask.js"],"names":["React","useState","useContext","makeStyles","TextField","FormControl","FormHelperText","Grid","List","ListItem","Paper","Button","Switch","FormControlLabel","Autocomplete","ToDoContext","useStyles","theme","paper","width","textAlign","borderRadius","header","backgroundColor","boxShadow","padding","fontWeight","display","justifyContent","alignItems","grids","lineHeight","button","minWidth","border","margin","helperText","marginTop","selectForm","gridField","AddTask","todos","setTodos","handleClose","todoContext","state","inputText","setInputText","user","setUser","todoStatus","setTodoStatus","classes","handleSubmit","e","preventDefault","addTodo","name","isComplete","setIsLoading","isLoading","inputTextHandler","console","log","target","value","inputUserHandler","statusHandler","userFcontext","map","key","firstName","lastName","params"],"mappings":"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","sourcesContent":["// import React from 'react';\nimport React, { useState, useContext} from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { TextField, FormControl,FormHelperText, Grid, List, ListItem, Paper, Button, Switch} from '@material-ui/core';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport ToDoContext from './context';\n\nconst useStyles = makeStyles(theme => ({ \npaper: {\n    width:'500px',\n    textAlign: 'center',\n    borderRadius: '10pt 10pt 4pt 4pt' \n },\nheader:{\n    backgroundColor: '#ffffff',\n    boxShadow: '0px 3px 6px #00000029',\n    padding: '20px 24px 15px',\n    // border: '1px solid #eeeeee',\n    fontWeight: '600', \n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: '10px 10px 0px 0px'\n  },\ngrids:{\n    padding: '0px 7px 0px 0',\n    lineHeight: 2\n  },\nbutton: {\n    minWidth: \"150px\",\n    fontWeight: 600,\n    border: 2,\n    boxShadow: '0px 3px 6px #00000029',\n    borderRadius: '6px',\n    margin: \"33px\"\n  },\nhelperText:{\n    marginTop:\"-65px\"\n  },  \nselectForm: {\n    width: '100%'\n  },\ngridField: {\n    margin: '15px',\n  },\n  \n}));\n\nconst AddTask = ({todos, setTodos, handleClose} ) => {\n  const {todoContext, state} = useContext(ToDoContext)\n  const [inputText, setInputText] = useState(\"\");\n  const [user,setUser]= useState(\"\")\n  const [todoStatus, setTodoStatus]= useState(false);\n  const classes = useStyles();\n  \n const handleSubmit = (e) => {\n    e.preventDefault();\n    todoContext.addTodo({name:inputText, isComplete: todoStatus, user:user});\n    todoContext.setIsLoading(state.isLoading+1);\n    setInputText(\" \");\n    handleClose();\n}\n\nconst inputTextHandler = (e) => {\n   console.log(e.target.value)\n   setInputText(e.target.value);\n};\nconst inputUserHandler = (e) => {\n  console.log(e.target.value)\n  setUser(e.target.value);\n};\n\n\nconst statusHandler = (e) => {\n  if (todoStatus){\n    setTodoStatus(false)\n  }\n  else {\n    setTodoStatus(true)\n  }\n  \n}\n\n  return (\n    <Grid> \n      <Paper  className={classes.paper}>\n      <div className={classes.header}>\n            <span>Add Task</span>\n            </div>\n          <List>\n            <ListItem>\n                <Grid container >\n                    <Grid item xs={12} className={classes.gridField}>\n                        <FormControl className={classes.selectForm}>\n                          <TextField id=\"outlined-basic\"\n                            size=\"small\" \n                             value={inputText}\n                            onChange={inputTextHandler}\n                            variant=\"outlined\" />\n                        </FormControl>\n                        <FormHelperText className={classes.helperText}>Project Name</FormHelperText>\n                    </Grid>                \n                </Grid> \n            </ListItem>\n            <ListItem> \n            {/* <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n              > */}\n              <Grid item xs={12} sm={6}>\n             <Grid item xs={12} md={6} className={classes.gridField} style={{marginTop:\"77px\"}}>\n                  <FormControl className={classes.selectForm}>\n                  <Autocomplete\n                    id=\"user-field\"\n                    freeSolo\n                    value={user}\n                    options={state.userFcontext.map((user,key) => user.firstName + user.lastName ) }\n                    renderInput={(params) => (\n                      <TextField {...params} \n                          label=\"User\" \n          \n                          onChange={inputUserHandler}\n                          variant=\"outlined\"\n                          fullWidth\n                          size= \"small\" />\n                    )}\n                  />\n                  </FormControl>\n                  <FormHelperText className={classes.helperText}>User</FormHelperText>\n            </Grid>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n            <Grid item xs={3} style={{marginTop:\"90px\"}}>\n                    <FormControlLabel\n                                value=\"completed\"\n                                size= \"small\"\n                                onChange={statusHandler}\n                                control={<Switch color=\"primary\" />}\n                                />\n                    <FormHelperText className={classes.helperText}>Completed</FormHelperText>      \n              </Grid>\n           </Grid>\n          {/* </Grid> */}\n          </ListItem>\n          </List> \n          <div>\n              <Button\n                  className={classes.button}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSubmit}\n              >\n                  Save\n              </Button>\n          </div>\n          {/* {todos.map((todo) => <div>{todo.text}</div>\n\n          )} */}\n      </Paper>\n    </Grid>  \n  );\n};\nexport default AddTask;\n"]},"metadata":{},"sourceType":"module"}