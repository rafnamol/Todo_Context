{"ast":null,"code":"var _jsxFileName = \"/Users/rafnaali/Desktop/Todo-list/BlueSky-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useMemo } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Header from \"./Header\";\nimport Content from \"./Content\";\nimport { makeServer } from \"./server.js\";\nimport ToDoContext from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  makeServer();\n  const [todos, setTodos] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n  const todoContext = useMemo(() => ({\n    addTodo: async data => {\n      await fetch(\"api/todo/create\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          \"name\": \"Something to do\",\n          \"isComplete\": false\n        })\n      });\n      dispatch({\n        type: \"ADD\"\n      });\n    }\n  }), []);\n  const [state, dispatch] = useReducer((prevState, action) => {\n    switch (action.type) {\n      case \"ADD\":\n        return { ...prevState,\n          isLoading: true\n        };\n\n      case \"LIST\":\n        return { ...prevState,\n          todos: action.value\n        };\n    }\n  }, {\n    isLoading: true,\n    todos: []\n  }); // useEffect(() => {\n  //   fetch(\"api/users\" , {\n  //     headers : { \n  //       'Content-Type': 'application/json',\n  //       'Accept': 'application/json'\n  //      }\n  //   })\n  //     .then((result) => result.json())\n  //     .then((resp) => {\n  //       // console.warn(resp)\n  //       setTodo(resp)\n  //     })\n  //   }\n  // )\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(ToDoContext.Provider, {\n        value: todoContext,\n        children: /*#__PURE__*/_jsxDEV(Content, {\n          todos: todos,\n          setTodos: setTodos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2dmaA8s3kTPvPpdplxN9hYOcCdg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rafnaali/Desktop/Todo-list/BlueSky-project/src/App.js"],"names":["React","useState","useEffect","useContext","useMemo","Header","Content","makeServer","ToDoContext","App","todos","setTodos","todo","setTodo","todoContext","addTodo","data","fetch","method","body","JSON","stringify","dispatch","type","state","useReducer","prevState","action","isLoading","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAgDC,OAAhD,QAA+D,OAA/D;;AAEA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,UAAR,QAAyB,aAAzB;AACA,OAAOC,WAAP,MAAwB,WAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACbF,EAAAA,UAAU;AAGV,QAAM,CAACG,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACW,IAAD,EAAMC,OAAN,IAAiBZ,QAAQ,CAAC,EAAD,CAA/B;AAEA,QAAMa,WAAW,GAAGV,OAAO,CACzB,OAAO;AACLW,IAAAA,OAAO,EAAE,MAAOC,IAAP,IAAgB;AACvB,YAAMC,KAAK,CACP,iBADO,EAEP;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACF;AAAC,kBAAO,iBAAR;AAA0B,wBAAa;AAAvC,SADE;AAFR,OAFO,CAAX;AAQEC,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACH;AAXI,GAAP,CADyB,EAczB,EAdyB,CAA3B;AAgBA,QAAM,CAACC,KAAD,EAAQF,QAAR,IAAoBG,UAAU,CAClC,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AACrB,YAAQA,MAAM,CAACJ,IAAf;AACE,WAAK,KAAL;AACE,eAAO,EACL,GAAGG,SADE;AAELE,UAAAA,SAAS,EAAE;AAFN,SAAP;;AAIF,WAAK,MAAL;AACE,eAAO,EACL,GAAGF,SADE;AAELhB,UAAAA,KAAK,EAAEiB,MAAM,CAACE;AAFT,SAAP;AAPJ;AAaD,GAfiC,EAgBlC;AACED,IAAAA,SAAS,EAAE,IADb;AAEElB,IAAAA,KAAK,EAAE;AAFT,GAhBkC,CAApC,CAvBa,CAgDb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACA,QAAC,WAAD,CAAa,QAAb;AAAsB,QAAA,KAAK,EAAEI,WAA7B;AAAA,+BAA0C,QAAC,OAAD;AAAS,UAAA,KAAK,EAAEJ,KAAhB;AAAuB,UAAA,QAAQ,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAtEQF,G;;KAAAA,G;AAwET,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, useContext,useMemo } from 'react';\nimport logo from './logo.svg';\nimport './App.css'\nimport Header from \"./Header\";\nimport Content from \"./Content\";\nimport {makeServer} from \"./server.js\";\nimport ToDoContext from './context'\n\nfunction App() {\n  makeServer();\n  \n \n  const [todos,setTodos] = useState([])\n  const [todo,setTodo] = useState(\"\")\n  \n  const todoContext = useMemo(\n    () => ({\n      addTodo: async (data) => {\n        await fetch(\n            \"api/todo/create\",\n            {\n              method: \"POST\",\n              body: JSON.stringify(\n                  {\"name\":\"Something to do\",\"isComplete\":false}),\n            }\n          )\n          dispatch({ type: \"ADD\" });\n      },\n    }),\n    []\n  );\n  const [state, dispatch] = useReducer(\n    (prevState, action) => {\n      switch (action.type) {\n        case \"ADD\":\n          return {\n            ...prevState,\n            isLoading: true,\n          };\n        case \"LIST\":\n          return {\n            ...prevState,\n            todos: action.value\n          }\n\n      }\n    },\n    {\n      isLoading: true,\n      todos: [],\n    }\n  );\n\n\n \n\n  // useEffect(() => {\n  //   fetch(\"api/users\" , {\n  //     headers : { \n  //       'Content-Type': 'application/json',\n  //       'Accept': 'application/json'\n  //      }\n  //   })\n  //     .then((result) => result.json())\n  //     .then((resp) => {\n  //       // console.warn(resp)\n  //       setTodo(resp)\n  //     })\n  //   }\n  // )\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <ToDoContext.Provider value={todoContext}><Content todos={todos} setTodos={setTodos} /></ToDoContext.Provider>  \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}