{"ast":null,"code":"// Object.defineProperty(exports, \"__esModule\", { value: true });\n// exports.makeServer = void 0;\nvar miragejs_1 = require(\"miragejs\");\n\nvar faker = require(\"faker\");\n\nexport function makeServer() {\n  var server = new miragejs_1.Server({\n    serializers: {\n      // application: JSONAPISerializer.extend({\n      //     alwaysIncludeLinkageData: false\n      // }),\n      todo: miragejs_1.RestSerializer.extend({\n        serializeIds: \"always\"\n      }) // users: RestSerializer.extend({\n      //     include:[\"todo\"],\n      //     embed: true\n      // })\n\n    },\n    models: {\n      todo: miragejs_1.Model.extend({\n        user: miragejs_1.belongsTo()\n      }),\n      user: miragejs_1.Model.extend({\n        todos: miragejs_1.hasMany()\n      })\n    },\n    factories: {\n      user: miragejs_1.Factory.extend({\n        id: function (i) {\n          return Number(i + 1);\n        },\n        firstName: function () {\n          return faker.name.firstName();\n        },\n        lastName: function () {\n          return faker.name.lastName();\n        }\n      }),\n      todo: miragejs_1.Factory.extend({\n        name: function () {\n          return faker.random.words(faker.random.number(4) + 1);\n        },\n        isComplete: false\n      })\n    },\n    seeds: function (server) {\n      var users = server.createList(\"user\", 5);\n\n      for (var _i = 0, users_1 = users; _i < users_1.length; _i++) {\n        var user = users_1[_i];\n        server.createList(\"todo\", faker.random.number(4), {\n          user: user\n        });\n      }\n    },\n    routes: function () {\n      this.namespace = \"api\";\n      this.get(\"/users\", function (schema) {\n        return schema.users.all();\n      });\n      this.get(\"/user/:id/todos\", function (schema, request) {\n        var userID = request.params.id;\n        var todos = schema.todos.where({\n          userID: userID\n        });\n        return {\n          todos: todos\n        };\n      }); // todo apis\n\n      this.get(\"/todos\", function (schema, request) {\n        var active = request.params.active;\n        console.log(active);\n        return schema.todos.all();\n      });\n      this.get(\"/todo/:id\", function (schema, request) {\n        var todoId = request.params.id;\n        var todo = schema.todos.find(todoId);\n        return {\n          todo: todo\n        };\n      });\n      this.delete(\"/todo/:id/delete\", function (schema, request) {\n        var todoId = request.params.id;\n        schema.todos.find(todoId).destroy();\n        return {\n          success: true\n        };\n      });\n      this.post(\"/todo/create\", function (schema, request) {\n        var attrs = JSON.parse(request.requestBody);\n        return schema.todos.create(attrs);\n      });\n    }\n  });\n  return server;\n}","map":{"version":3,"sources":["/Users/rafnaali/Desktop/context_list/src/server.js"],"names":["miragejs_1","require","faker","makeServer","server","Server","serializers","todo","RestSerializer","extend","serializeIds","models","Model","user","belongsTo","todos","hasMany","factories","Factory","id","i","Number","firstName","name","lastName","random","words","number","isComplete","seeds","users","createList","_i","users_1","length","routes","namespace","get","schema","all","request","userID","params","where","active","console","log","todoId","find","delete","destroy","success","post","attrs","JSON","parse","requestBody","create"],"mappings":"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","sourcesContent":["\n// Object.defineProperty(exports, \"__esModule\", { value: true });\n// exports.makeServer = void 0;\nvar miragejs_1 = require(\"miragejs\");\nvar faker = require(\"faker\");\nexport function makeServer() {\n    var server = new miragejs_1.Server({\n        serializers: {\n            // application: JSONAPISerializer.extend({\n            //     alwaysIncludeLinkageData: false\n            // }),\n            todo: miragejs_1.RestSerializer.extend({\n                serializeIds: \"always\",\n            })\n            // users: RestSerializer.extend({\n            //     include:[\"todo\"],\n            //     embed: true\n            // })\n        },\n        models: {\n            todo: miragejs_1.Model.extend({\n                user: miragejs_1.belongsTo()\n            }),\n            user: miragejs_1.Model.extend({\n                todos: miragejs_1.hasMany()\n            })\n        },\n        factories: {\n            user: miragejs_1.Factory.extend({\n                id: function (i) {\n                    return Number(i + 1);\n                },\n                firstName: function () {\n                    return faker.name.firstName();\n                },\n                lastName: function () {\n                    return faker.name.lastName();\n                }\n            }),\n            todo: miragejs_1.Factory.extend({\n                name: function () {\n                    return faker.random.words(faker.random.number(4) + 1);\n                },\n                isComplete: false\n            })\n        },\n        seeds: function (server) {\n            var users = server.createList(\"user\", 5);\n            for (var _i = 0, users_1 = users; _i < users_1.length; _i++) {\n                var user = users_1[_i];\n                server.createList(\"todo\", faker.random.number(4), { user: user });\n            }\n        },\n        routes: function () {\n            this.namespace = \"api\";\n            this.get(\"/users\", function (schema) {\n                return schema.users.all();\n            });\n            this.get(\"/user/:id/todos\", function (schema, request) {\n                var userID = request.params.id;\n                var todos = schema.todos.where({ userID: userID });\n                return {\n                    todos: todos\n                };\n            });\n            // todo apis\n            this.get(\"/todos\", function (schema, request) {\n                var active = request.params.active;\n                console.log(active);\n                return schema.todos.all();\n            });\n            this.get(\"/todo/:id\", function (schema, request) {\n                var todoId = request.params.id;\n                var todo = schema.todos.find(todoId);\n                return {\n                    todo: todo\n                };\n            });\n            this.delete(\"/todo/:id/delete\", function (schema, request) {\n                var todoId = request.params.id;\n                schema.todos.find(todoId).destroy();\n                return { success: true };\n            });\n            this.post(\"/todo/create\", function (schema, request) {\n                var attrs = JSON.parse(request.requestBody);\n                return schema.todos.create(attrs);\n            });\n        }\n    });\n    return server;\n}\n\n"]},"metadata":{},"sourceType":"module"}