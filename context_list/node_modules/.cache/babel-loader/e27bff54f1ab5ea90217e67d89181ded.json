{"ast":null,"code":"var _jsxFileName = \"/Users/rafnaali/Desktop/Todo-list/BlueSky-project/src/AddTask.js\",\n    _s = $RefreshSig$();\n\n// import React from 'react';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { TextField, FormControl, colors, FormHelperText, Grid, List, ListItem, Paper, Button, Switch } from '@material-ui/core';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ToDoContext from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    width: '500px',\n    textAlign: 'center',\n    borderRadius: '10pt 10pt 4pt 4pt'\n  },\n  header: {\n    backgroundColor: '#ffffff',\n    boxShadow: '0px 3px 6px #00000029',\n    padding: '20px 24px 15px',\n    // border: '1px solid #eeeeee',\n    fontWeight: '600',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: '10px 10px 0px 0px'\n  },\n  grids: {\n    padding: '0px 7px 0px 0',\n    lineHeight: 2\n  },\n  button: {\n    minWidth: \"150px\",\n    fontWeight: 600,\n    border: 2,\n    boxShadow: '0px 3px 6px #00000029',\n    borderRadius: '6px',\n    margin: \"33px\"\n  },\n  helperText: {\n    marginTop: \"-65px\"\n  },\n  selectForm: {\n    width: '100%'\n  },\n  gridField: {\n    margin: '15px'\n  }\n}));\n\nconst AddTask = ({\n  todos,\n  setTodos,\n  handleClose\n}) => {\n  _s();\n\n  const {\n    todoContext,\n    state\n  } = useContext(ToDoContext);\n  const [inputText, setInputText] = useState(\"\");\n  const [todoStatus, setTodoStatus] = useState(false);\n  const classes = useStyles(); // useEffect(() => {\n  //   fetch(\n  //     (\"api/todo/create\"),\n  //   {\n  //     method: 'POST',\n  //   }\n  //   )\n  //     .then((response) => response.json())\n  //     .then((json) => todoContext.addTodo(json.todos))\n  // }, [])\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    todoContext.addTodo(inputText);\n    setInputText(\" \");\n    handleClose();\n  };\n\n  const inputTextHandler = e => {\n    console.log(e.target.value);\n    setInputText(e.target.value);\n  };\n\n  const submitTodoHandler = e => {\n    e.preventDefault();\n    setTodos([...todos, {\n      text: inputText,\n      completed: false,\n      id: Math.random() * 1000\n    }]);\n    setInputText(\" \");\n    handleClose();\n  };\n\n  const statusHandler = e => {\n    if (todoStatus) {\n      setTodoStatus(false);\n    } else {\n      setTodoStatus(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.header,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              className: classes.gridField,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                className: classes.selectForm,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"outlined-basic\",\n                  size: \"small\",\n                  value: inputText,\n                  onChange: inputTextHandler,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                className: classes.helperText,\n                children: \"Project Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: todoStatus ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            style: {\n              marginTop: \"90px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"completed\",\n              size: \"small\",\n              onChange: statusHandler,\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: classes.helperText,\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddTask, \"j01+3rz4Xaastvwo/pXZ6/Y2rfI=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddTask;\nexport default AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["/Users/rafnaali/Desktop/Todo-list/BlueSky-project/src/AddTask.js"],"names":["React","useState","useEffect","useContext","makeStyles","TextField","FormControl","colors","FormHelperText","Grid","List","ListItem","Paper","Button","Switch","FormControlLabel","ToDoContext","useStyles","theme","paper","width","textAlign","borderRadius","header","backgroundColor","boxShadow","padding","fontWeight","display","justifyContent","alignItems","grids","lineHeight","button","minWidth","border","margin","helperText","marginTop","selectForm","gridField","AddTask","todos","setTodos","handleClose","todoContext","state","inputText","setInputText","todoStatus","setTodoStatus","classes","handleSubmit","e","preventDefault","addTodo","inputTextHandler","console","log","target","value","submitTodoHandler","text","completed","id","Math","random","statusHandler"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAsD,OAAtD;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,MAAjC,EAAwCC,cAAxC,EAAwDC,IAAxD,EAA8DC,IAA9D,EAAoEC,QAApE,EAA8EC,KAA9E,EAAqFC,MAArF,EAA6FC,MAA7F,QAA0G,mBAA1G;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,WAAxB;;AAEA,MAAMC,SAAS,GAAGb,UAAU,CAACc,KAAK,KAAK;AACvCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAC,OADH;AAEHC,IAAAA,SAAS,EAAE,QAFR;AAGHC,IAAAA,YAAY,EAAE;AAHX,GADgC;AAMvCC,EAAAA,MAAM,EAAC;AACHC,IAAAA,eAAe,EAAE,SADd;AAEHC,IAAAA,SAAS,EAAE,uBAFR;AAGHC,IAAAA,OAAO,EAAE,gBAHN;AAIH;AACAC,IAAAA,UAAU,EAAE,KALT;AAMHC,IAAAA,OAAO,EAAE,MANN;AAOHC,IAAAA,cAAc,EAAE,eAPb;AAQHC,IAAAA,UAAU,EAAE,QART;AASHR,IAAAA,YAAY,EAAE;AATX,GANgC;AAiBvCS,EAAAA,KAAK,EAAC;AACFL,IAAAA,OAAO,EAAE,eADP;AAEFM,IAAAA,UAAU,EAAE;AAFV,GAjBiC;AAqBvCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,QAAQ,EAAE,OADN;AAEJP,IAAAA,UAAU,EAAE,GAFR;AAGJQ,IAAAA,MAAM,EAAE,CAHJ;AAIJV,IAAAA,SAAS,EAAE,uBAJP;AAKJH,IAAAA,YAAY,EAAE,KALV;AAMJc,IAAAA,MAAM,EAAE;AANJ,GArB+B;AA6BvCC,EAAAA,UAAU,EAAC;AACPC,IAAAA,SAAS,EAAC;AADH,GA7B4B;AAgCvCC,EAAAA,UAAU,EAAE;AACRnB,IAAAA,KAAK,EAAE;AADC,GAhC2B;AAmCvCoB,EAAAA,SAAS,EAAE;AACPJ,IAAAA,MAAM,EAAE;AADD;AAnC4B,CAAL,CAAN,CAA5B;;AAyCA,MAAMK,OAAO,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAAqC;AAAA;;AACnD,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAAuB3C,UAAU,CAACa,WAAD,CAAvC;AACA,QAAM,CAAC+B,SAAD,EAAYC,YAAZ,IAA4B/C,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACgD,UAAD,EAAaC,aAAb,IAA6BjD,QAAQ,CAAC,KAAD,CAA3C;AACA,QAAMkD,OAAO,GAAGlC,SAAS,EAAzB,CAJmD,CAMnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMmC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,WAAW,CAACU,OAAZ,CAAoBR,SAApB;AACAC,IAAAA,YAAY,CAAC,GAAD,CAAZ;AACAJ,IAAAA,WAAW;AACd,GALC;;AAOF,QAAMY,gBAAgB,GAAIH,CAAD,IAAO;AAC7BI,IAAAA,OAAO,CAACC,GAAR,CAAYL,CAAC,CAACM,MAAF,CAASC,KAArB;AACAZ,IAAAA,YAAY,CAACK,CAAC,CAACM,MAAF,CAASC,KAAV,CAAZ;AACF,GAHD;;AAKA,QAAMC,iBAAiB,GAAIR,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAX,IAAAA,QAAQ,CAAC,CACL,GAAGD,KADE,EAEL;AAACoB,MAAAA,IAAI,EAAEf,SAAP;AAAkBgB,MAAAA,SAAS,EAAE,KAA7B;AAAoCC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,KAAgB;AAAxD,KAFK,CAAD,CAAR;AAIAlB,IAAAA,YAAY,CAAC,GAAD,CAAZ;AACAJ,IAAAA,WAAW;AACZ,GARD;;AAUA,QAAMuB,aAAa,GAAId,CAAD,IAAO;AAC3B,QAAIJ,UAAJ,EAAe;AACbC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAFD,MAGK;AACHA,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AAEF,GARD;;AAUE,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,KAAD;AAAQ,MAAA,SAAS,EAAEC,OAAO,CAAChC,KAA3B;AAAA,8BACA;AAAK,QAAA,SAAS,EAAEgC,OAAO,CAAC5B,MAAxB;AAAA,+BACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,cADA,eAII,QAAC,IAAD;AAAA,gCACE,QAAC,QAAD;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,SAAS,EAAE4B,OAAO,CAACX,SAAtC;AAAA,sCACI,QAAC,WAAD;AAAa,gBAAA,SAAS,EAAEW,OAAO,CAACZ,UAAhC;AAAA,uCACE,QAAC,SAAD;AAAW,kBAAA,EAAE,EAAC,gBAAd;AACE,kBAAA,IAAI,EAAC,OADP;AAEG,kBAAA,KAAK,EAAEQ,SAFV;AAGE,kBAAA,QAAQ,EAAES,gBAHZ;AAIE,kBAAA,OAAO,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADJ,eAQI,QAAC,cAAD;AAAgB,gBAAA,SAAS,EAAEL,OAAO,CAACd,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE;AAAA,oBAAIY,UAAU,GAAC,MAAD,GAAQ;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAfF,eAgBE,QAAC,QAAD;AAAA,iCAqBA,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAkB,YAAA,KAAK,EAAE;AAACX,cAAAA,SAAS,EAAC;AAAX,aAAzB;AAAA,oCACQ,QAAC,gBAAD;AACY,cAAA,KAAK,EAAC,WADlB;AAEY,cAAA,IAAI,EAAE,OAFlB;AAGY,cAAA,QAAQ,EAAE6B,aAHtB;AAIY,cAAA,OAAO,eAAE,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AAJrB;AAAA;AAAA;AAAA;AAAA,oBADR,eAOQ,QAAC,cAAD;AAAgB,cAAA,SAAS,EAAEhB,OAAO,CAACd,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AArBA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAoDI;AAAA,+BACI,QAAC,MAAD;AACI,UAAA,SAAS,EAAEc,OAAO,CAAClB,MADvB;AAEI,UAAA,OAAO,EAAC,WAFZ;AAGI,UAAA,KAAK,EAAC,SAHV;AAII,UAAA,OAAO,EAAEmB,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cApDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsED,CAvHD;;GAAMX,O;UAIYxB,S;;;KAJZwB,O;AAwHN,eAAeA,OAAf","sourcesContent":["// import React from 'react';\nimport React, { useState, useEffect, useContext} from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { TextField, FormControl, colors,FormHelperText, Grid, List, ListItem, Paper, Button, Switch} from '@material-ui/core';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ToDoContext from './context';\n\nconst useStyles = makeStyles(theme => ({ \npaper: {\n    width:'500px',\n    textAlign: 'center',\n    borderRadius: '10pt 10pt 4pt 4pt' \n },\nheader:{\n    backgroundColor: '#ffffff',\n    boxShadow: '0px 3px 6px #00000029',\n    padding: '20px 24px 15px',\n    // border: '1px solid #eeeeee',\n    fontWeight: '600', \n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: '10px 10px 0px 0px'\n  },\ngrids:{\n    padding: '0px 7px 0px 0',\n    lineHeight: 2\n  },\nbutton: {\n    minWidth: \"150px\",\n    fontWeight: 600,\n    border: 2,\n    boxShadow: '0px 3px 6px #00000029',\n    borderRadius: '6px',\n    margin: \"33px\"\n  },\nhelperText:{\n    marginTop:\"-65px\"\n  },  \nselectForm: {\n    width: '100%'\n  },\ngridField: {\n    margin: '15px',\n  },\n  \n}));\n\nconst AddTask = ({todos, setTodos, handleClose} ) => {\n  const {todoContext, state} = useContext(ToDoContext)\n  const [inputText, setInputText] = useState(\"\");\n  const [todoStatus, setTodoStatus]= useState(false);\n  const classes = useStyles();\n  \n  // useEffect(() => {\n  //   fetch(\n  //     (\"api/todo/create\"),\n  //   {\n  //     method: 'POST',\n  //   }\n  //   )\n  //     .then((response) => response.json())\n  //     .then((json) => todoContext.addTodo(json.todos))\n  // }, [])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    todoContext.addTodo(inputText);\n    setInputText(\" \");\n    handleClose();\n}\n\nconst inputTextHandler = (e) => {\n   console.log(e.target.value)\n   setInputText(e.target.value);\n};\n\nconst submitTodoHandler = (e) => {\n  e.preventDefault();\n  setTodos([\n      ...todos,\n      {text: inputText, completed: false, id: Math.random() * 1000}\n  ]);\n  setInputText(\" \");\n  handleClose();\n}\n\nconst statusHandler = (e) => {\n  if (todoStatus){\n    setTodoStatus(false)\n  }\n  else {\n    setTodoStatus(true)\n  }\n  \n}\n\n  return (\n    <Grid> \n      <Paper  className={classes.paper}>\n      <div className={classes.header}>\n            <span>Add Task</span>\n            </div>\n          <List>\n            <ListItem>\n                <Grid container >\n                    <Grid item xs={12} className={classes.gridField}>\n                        <FormControl className={classes.selectForm}>\n                          <TextField id=\"outlined-basic\"\n                            size=\"small\" \n                             value={inputText}\n                            onChange={inputTextHandler}\n                            variant=\"outlined\" />\n                        </FormControl>\n                        <FormHelperText className={classes.helperText}>Project Name</FormHelperText>\n                    </Grid>                \n                </Grid> \n            </ListItem>\n            <p>{todoStatus?\"true\":\"false\"}</p>\n            <ListItem> \n            {/* <Grid item xs={12} md={6} className={classes.gridField} style={{marginTop:\"77px\"}}>\n                  <FormControl className={classes.selectForm}>\n                  <TextField\n                        id=\"user\"\n                        select\n                        size=\"small\"\n                        labelPlacement=\"top\"\n                        variant=\"outlined\"\n                        SelectProps={{\n                            native: true,\n                        }}\n                        > */}\n                        {/* {user.map((option) => (\n                            <option key={option.value} value={option.value}>\n                            </option>\n                        ))} */}\n                    {/* </TextField>\n                  </FormControl>\n                  <FormHelperText className={classes.helperText}>User</FormHelperText>\n            </Grid> */}\n            <Grid item xs={3} style={{marginTop:\"90px\"}}>\n                    <FormControlLabel\n                                value=\"completed\"\n                                size= \"small\"\n                                onChange={statusHandler}\n                                control={<Switch color=\"primary\" />}\n                                />\n                    <FormHelperText className={classes.helperText}>Completed</FormHelperText>      \n                    </Grid>\n            </ListItem>\n          </List> \n          <div>\n              <Button\n                  className={classes.button}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSubmit}\n              >\n                  Save\n              </Button>\n          </div>\n          {/* {todos.map((todo) => <div>{todo.text}</div>\n\n          )} */}\n      </Paper>\n    </Grid>  \n  );\n};\nexport default AddTask;\n"]},"metadata":{},"sourceType":"module"}