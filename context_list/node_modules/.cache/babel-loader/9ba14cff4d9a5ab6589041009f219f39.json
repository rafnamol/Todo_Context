{"ast":null,"code":"var _jsxFileName = \"/Users/rafnaali/Desktop/Todo-list/BlueSky-project/src/Content.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport ToDoContext from './context';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Grid, Typography, List, ListItem, FormControl, Paper, FormHelperText, Dialog, FormControlLabel, Switch, TextField, IconButton } from '@material-ui/core';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    width: 1000,\n    textAlign: 'center',\n    borderRadius: '10pt 10pt 4pt 4pt'\n  },\n  header: {\n    backgroundColor: '#ffffff',\n    boxShadow: '0px 3px 6px #00000029',\n    padding: '20px 24px 15px',\n    fontWeight: '600',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: '10px 10px 0px 0px'\n  },\n  // grids:{\n  //   lineHeight: 2\n  // },\n  helperText: {\n    marginTop: \"-62px\"\n  },\n  button: {\n    minWidth: \"150px\",\n    fontWeight: 600,\n    border: 2,\n    boxShadow: '0px 3px 6px #00000029',\n    borderRadius: '6px',\n    margin: \"21px\"\n  }\n}));\n\nconst Content = () => {\n  _s();\n\n  const {\n    todoContext,\n    state\n  } = useContext(ToDoContext);\n  useEffect(() => {\n    fetch(\"api/todos\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => response.json()).then(json => todoContext.listTodo(json.todos));\n  }, []);\n  const classes = useStyles();\n  const [list, setList] = React.useState('');\n\n  const handleChange = event => {\n    setList(event.target.value);\n  };\n\n  const lsp = Object.values(state.todosFcontext);\n  console.log(\"first\", lsp);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.header,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          style: {\n            margin: \"25px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                id: \"project-field\",\n                value: lsp // freeSolo\n                ,\n                options: lsp.map((todo, key) => todo.name),\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Project Name\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n              id: \"project-field\",\n              value: lsp // freeSolo\n              ,\n              options: lsp.map((todo, key) => todo.name),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                label: \"Project Name\",\n                variant: \"outlined\",\n                fullWidth: true,\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: classes.helperText,\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Content, \"hsEa6GCloRS20654sEI51FSZukI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/rafnaali/Desktop/Todo-list/BlueSky-project/src/Content.js"],"names":["React","useState","useEffect","useContext","ToDoContext","makeStyles","Button","Grid","Typography","List","ListItem","FormControl","Paper","FormHelperText","Dialog","FormControlLabel","Switch","TextField","IconButton","CheckCircleOutlineIcon","CancelIcon","EditIcon","Autocomplete","useStyles","theme","paper","width","textAlign","borderRadius","header","backgroundColor","boxShadow","padding","fontWeight","display","justifyContent","alignItems","helperText","marginTop","button","minWidth","border","margin","Content","todoContext","state","fetch","headers","then","response","json","listTodo","todos","classes","list","setList","handleChange","event","target","value","lsp","Object","values","todosFcontext","console","log","map","todo","key","name","params"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,EAAsCC,UAAtC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,UAAtB,EAAkCC,IAAlC,EAAwCC,QAAxC,EAAiDC,WAAjD,EAA8DC,KAA9D,EAAoEC,cAApE,EAAoFC,MAApF,EAA2FC,gBAA3F,EAA6GC,MAA7G,EAAoHC,SAApH,EAA8HC,UAA9H,QAAgJ,mBAAhJ;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;;AAEA,MAAMC,SAAS,GAAGlB,UAAU,CAACmB,KAAK,KAAK;AACrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,IADF;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,YAAY,EAAE;AAHT,GAD8B;AAMrCC,EAAAA,MAAM,EAAC;AACLC,IAAAA,eAAe,EAAE,SADZ;AAELC,IAAAA,SAAS,EAAE,uBAFN;AAGLC,IAAAA,OAAO,EAAE,gBAHJ;AAILC,IAAAA,UAAU,EAAE,KAJP;AAKLC,IAAAA,OAAO,EAAE,MALJ;AAMLC,IAAAA,cAAc,EAAE,eANX;AAOLC,IAAAA,UAAU,EAAE,QAPP;AAQLR,IAAAA,YAAY,EAAE;AART,GAN8B;AAgBrC;AACA;AACA;AACAS,EAAAA,UAAU,EAAC;AACTC,IAAAA,SAAS,EAAC;AADD,GAnB0B;AAsBrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,OADJ;AAENP,IAAAA,UAAU,EAAE,GAFN;AAGNQ,IAAAA,MAAM,EAAE,CAHF;AAINV,IAAAA,SAAS,EAAE,uBAJL;AAKNH,IAAAA,YAAY,EAAE,KALR;AAMNc,IAAAA,MAAM,EAAE;AANF;AAtB6B,CAAL,CAAN,CAA5B;;AAgCA,MAAMC,OAAO,GAAI,MAAM;AAAA;;AACrB,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAAuB1C,UAAU,CAACC,WAAD,CAAvC;AACAF,EAAAA,SAAS,CAAE,MAAM;AACf4C,IAAAA,KAAK,CAAC,WAAD,EAAc;AACjBC,MAAAA,OAAO,EAAG;AACR,wBAAgB,kBADR;AAER,kBAAU;AAFF;AADO,KAAd,CAAL,CAKGC,IALH,CAKSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EALtB,EAMGF,IANH,CAMSE,IAAD,IAAUN,WAAW,CAACO,QAAZ,CAAqBD,IAAI,CAACE,KAA1B,CANlB;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,QAAMC,OAAO,GAAG9B,SAAS,EAAzB;AACA,QAAM,CAAC+B,IAAD,EAAOC,OAAP,IAAkBvD,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxB;;AAEA,QAAMuD,YAAY,GAAIC,KAAD,IAAW;AAC9BF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAIA,QAAMC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAcjB,KAAK,CAACkB,aAApB,CAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBL,GAApB;AACF,sBACA;AAAA,2BACA,QAAC,IAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEP,OAAO,CAAC5B,KAA1B;AAAA,gCACE;AAAK,UAAA,SAAS,EAAE4B,OAAO,CAACxB,MAAxB;AAAA,iCACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAA4B,UAAA,KAAK,EAAE;AAAEa,YAAAA,MAAM,EAAE;AAAV,WAAnC;AAAA,kCACG,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA,mCACC,QAAC,WAAD;AAAA,qCACI,QAAC,YAAD;AACI,gBAAA,EAAE,EAAC,eADP;AAEI,gBAAA,KAAK,EAAEkB,GAFX,CAGI;AAHJ;AAII,gBAAA,OAAO,EAAEA,GAAG,CAACM,GAAJ,CAAQ,CAACC,IAAD,EAAMC,GAAN,KAAcD,IAAI,CAACE,IAA3B,CAJb;AAKI,gBAAA,WAAW,EAAGC,MAAD,iBACX,QAAC,SAAD,OAAeA,MAAf;AACI,kBAAA,KAAK,EAAC,cADV;AAEI,kBAAA,OAAO,EAAC,UAFZ;AAGI,kBAAA,SAAS,MAHb;AAII,kBAAA,IAAI,EAAE;AAJV;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBADH,eAkBI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA,oCACA,QAAC,YAAD;AACQ,cAAA,EAAE,EAAC,eADX;AAEQ,cAAA,KAAK,EAAEV,GAFf,CAGQ;AAHR;AAIQ,cAAA,OAAO,EAAEA,GAAG,CAACM,GAAJ,CAAQ,CAACC,IAAD,EAAMC,GAAN,KAAcD,IAAI,CAACE,IAA3B,CAJjB;AAKQ,cAAA,WAAW,EAAGC,MAAD,iBACX,QAAC,SAAD,OAAeA,MAAf;AACI,gBAAA,KAAK,EAAC,cADV;AAEI,gBAAA,OAAO,EAAC,UAFZ;AAGI,gBAAA,SAAS,MAHb;AAII,gBAAA,IAAI,EAAE;AAJV;AAAA;AAAA;AAAA;AAAA;AANV;AAAA;AAAA;AAAA;AAAA,oBADA,eAcc,QAAC,cAAD;AAAgB,cAAA,SAAS,EAAEjB,OAAO,CAAChB,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdd;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADA;AA+CC,CApED;;GAAMM,O;UAYYpB,S;;;KAZZoB,O;AAqEN,eAAeA,OAAf","sourcesContent":["import React, { useState , useEffect, useContext} from 'react';\nimport ToDoContext from './context';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button, Grid, Typography, List, ListItem,FormControl, Paper,FormHelperText, Dialog,FormControlLabel, Switch,TextField,IconButton } from '@material-ui/core';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    width: 1000,\n    textAlign: 'center',\n    borderRadius: '10pt 10pt 4pt 4pt' \n },\n  header:{\n    backgroundColor: '#ffffff',\n    boxShadow: '0px 3px 6px #00000029',\n    padding: '20px 24px 15px',\n    fontWeight: '600', \n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: '10px 10px 0px 0px'\n  },\n  // grids:{\n  //   lineHeight: 2\n  // },\n  helperText:{\n    marginTop:\"-62px\"\n  },\n  button: {\n    minWidth: \"150px\",\n    fontWeight: 600,\n    border: 2,\n    boxShadow: '0px 3px 6px #00000029',\n    borderRadius: '6px',\n    margin: \"21px\"\n  },\n}));\n\nconst Content =  () => {\n  const {todoContext, state} = useContext(ToDoContext)\n  useEffect( () => {\n    fetch(\"api/todos\", {\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }})\n      .then((response) => response.json())\n      .then((json) => todoContext.listTodo(json.todos))\n  }, [])\n\n  const classes = useStyles();   \n  const [list, setList] = React.useState('');\n\n  const handleChange = (event) => {\n    setList(event.target.value);\n  };\n\n  const lsp = Object.values(state.todosFcontext);\n  console.log(\"first\",lsp)\nreturn (\n<div>\n<Grid>\n  <Paper className={classes.paper}> \n    <div className={classes.header}>\n          <span>List</span>\n    </div>\n    <Grid container spacing={2} style={{ margin: \"25px\"}}>\n       <Grid item xs={3}>\n        <FormControl>\n            <Autocomplete\n                id=\"project-field\"\n                value={lsp}\n                // freeSolo\n                options={lsp.map((todo,key) => todo.name)}\n                renderInput={(params) => (\n                  <TextField {...params} \n                      label=\"Project Name\" \n                      variant=\"outlined\"\n                      fullWidth\n                      size= \"small\" />\n                )}\n              />\n        </FormControl>\n        </Grid>\n        <Grid item xs={3}>\n        <Autocomplete\n                id=\"project-field\"\n                value={lsp}\n                // freeSolo\n                options={lsp.map((todo,key) => todo.name)}\n                renderInput={(params) => (\n                  <TextField {...params} \n                      label=\"Project Name\" \n                      variant=\"outlined\"\n                      fullWidth\n                      size= \"small\" />\n                )}\n              />\n                      <FormHelperText className={classes.helperText}>User</FormHelperText>\n              </Grid>\n    </Grid>\n\t\n  </Paper>  \n  </Grid>\n</div>\n);\n}\nexport default Content;"]},"metadata":{},"sourceType":"module"}